#!/usr/bin/awk -f
# convert links from a notmarkdown intermediate format to index.gph format

# This script only convert the "[ref]:" links.  The rest of the text
# is passed just escaped without other change.

BEGIN {
	HEADER = 1
}

function print_escaped(s)
{
	gsub("\\\\u", "_", s)
	gsub("\\\\q", "`", s)
	gsub("\\\\S", "[", s)
	gsub("\\\\s", "]", s)
	gsub("\\\\R", "(", s)
	gsub("\\\\r", ")", s)
	gsub("\\\\A", "<", s)
	gsub("\\\\a", ">", s)
	gsub("\\\\w", "*", s)
	gsub("\\\\e", "\\", s)
	print(s)
}

function print_link(link, descr)
{
	print_escaped(sprintf("=> %s %s", link, line))
}

# assert that [ref] is smaller than [replacement text]

function print_line(str, len,
	out, ref, links, n)
{
	n = 0
	while (match(str, /\[[^] ]+\]/)) {
		n += (links[ref = substr(str, RSTART + 1, RLENGTH - 2)] = 1)
		out = out substr(str, 1, RSTART - 1) "[" TEXT[ref] "]"
		str = substr(str, RSTART + RLENGTH)
	}
	out = out str

	if (n == 1)
		print_link(LINK[ref], out)
	if (n != 1)
		print_escaped(out)
	if (n >= 2)
		for (i in links)
			print_link(LINK[i], "* " TEXT[i])
	return str
}

HEADER && /^$/ {
	HEADER = 0
	next
}

HEADER {
	LINK[$1] = $2
	TEXT[$1] = $0
	sub("^[^ ]+ [^ ]* ", "", TEXT[$1])
	next
}

{
	BLOCK_PREV = BLOCK
	BLOCK = sub("^\t", "", $0)
}

BLOCK_PREV != BLOCK {
	print "```"
}

BLOCK {
	print
	next
}

{
	print_line($0)
	next
}

END {
	print ""
}
